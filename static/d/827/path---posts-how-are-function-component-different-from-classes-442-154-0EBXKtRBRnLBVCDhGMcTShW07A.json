{"data":{"site":{"siteMetadata":{"author":{"name":"Tek Fun","contacts":{"twitter":"vancuong279"}},"disqusShortname":"","subtitle":"I am a web developer. I love Javascript, ReactJS. With passion, curiosity, I learn for food, work for fun and share for the future. ","title":"Blog by Tek Fun","url":"https://tek-fun.netlify.com"}},"markdownRemark":{"id":"f8b3e661-8b85-55dd-95a2-53b2c78f3813","html":"<p>Chắc hẳn ai đã từng nghiên cứu hoặc làm việc với ReactJS cũng đã từng đặt ra suy nghĩ, thắc mắc về Class và Function Component, khi nào thì sử dụng, và nó khác nhau như thế nào. Hay một số người lại cho rằng cái này tốt hơn cái kia, hay Function component là stateless nên performance tốt hơn, vân vân.</p>\n<p>Cũng tò mò và cảm thấy khó hiều, mò mẫm mãi tham khảo mãi cũng hiểu 1 chút ít nên tôi muốn chia sẽ 1 chút về sự khác nhau giữa Function Component và Class Component.</p>\n<p>Tôi không nói đến việc cái nào tốt hơn cái nào, hay nên dùng cái nào, chỉ là sự khác nhau của nó thôi nhé.</p>\n<blockquote>\n<p>Function components capture the rendered values.</p>\n</blockquote>\n<p>Chúng ta hãy phân tích câu trên 1 chút nhé.</p>\n<p>Giả sử chúng ta có Function Component:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">ProfilePage</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">showMessage</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Followed '</span> <span class=\"token operator\">+</span> props<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">handleClick</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>showMessage<span class=\"token punctuation\">,</span> <span class=\"token number\">3000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>handleClick<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>Follow<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Chúng ta có 1 Button để Follow, khi click vào Button sau 3s thì nó sẽ show alert <code class=\"language-text\">Followed Tek Fun</code> chẳng hạn.\nvà chú ý là việc sử dụng function hay arrow function cho <code class=\"language-text\">handleClick</code> như trên thì cũng sẽ như nhau.</p>\n<p>và tương tự chúng ta sẽ có 1 class Component :</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">ProfilePage</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function-variable function\">showMessage</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Followed '</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function-variable function\">handleClick</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>showMessage<span class=\"token punctuation\">,</span> <span class=\"token number\">3000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleClick<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>Follow<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Bạn đã nhìn thấy nó khác nhau chưa nhỉ? Thật sự tôi cũng khó để nhận biết là nó khác nhau ở chổ nào, ngoài cách viết chúng.</p>\n<p>Nếu bạn dự định sử dụng Function Component thường xuyên thì có lẽ nên hiểu về nó. Tôi cũng chưa hiểu vậy nên phân tích sâu hơn 1 chút.</p>\n<p>Minh hoạ rõ hơn về nó tôi thêm 1 App ( tôi sưu tầm trên Internet thôi nhé. ) Compnent để sử dụng 2 Compoent trên:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">App</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    user<span class=\"token punctuation\">:</span> <span class=\"token string\">'TekFun'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>label<span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span>b<span class=\"token operator\">></span>Choose profile to view<span class=\"token punctuation\">:</span> <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>b<span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span>select\n            value<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">}</span>\n            onChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>e <span class=\"token operator\">=></span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> user<span class=\"token punctuation\">:</span> e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n          <span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>option value<span class=\"token operator\">=</span><span class=\"token string\">\"TekFun\"</span><span class=\"token operator\">></span>TekFun<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>option<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>option value<span class=\"token operator\">=</span><span class=\"token string\">\"Facebook\"</span><span class=\"token operator\">></span>Facebook<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>option<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>option value<span class=\"token operator\">=</span><span class=\"token string\">\"Instagram\"</span><span class=\"token operator\">></span>Instagram<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>option<span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>select<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>label<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">></span>Welcome to <span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">}</span>’s profile<span class=\"token operator\">!</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span>ProfilePageFunction user<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span>b<span class=\"token operator\">></span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>b<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span>ProfilePageClass user<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span>b<span class=\"token operator\">></span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>b<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>\n          Can you spot the difference <span class=\"token keyword\">in</span> the behavior<span class=\"token operator\">?</span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>các bạn nên code lại để hình dung hơn nhé,</p>\n<hr>\n<p>Mô tả 1 chút về Component trên nhé:</p>\n<ol>\n<li>Click vào một trong 2 button follow.</li>\n<li>thay đổi select input trước 3s.</li>\n<li>Show alert text.</li>\n</ol>\n<p>Chúng ta sẽ chú ý alert text được show ra khi click vào 2 button.</p>\n<ul>\n<li>Với <code class=\"language-text\">ProfilePageFunction</code> thì khi click vào và sau đó đổi select input thành <code class=\"language-text\">Facebook</code> thì alert vẫn sẽ show ra text là <code class=\"language-text\">Followed TekFun</code>.</li>\n<li>Với <code class=\"language-text\">ProfilePageClass</code> tương tự thao tác thì sẽ show ra là <code class=\"language-text\">Followed Facebook</code>.</li>\n</ul>\n<p>Như vậy chúng ta đã hình dung nó khác nhau rồi đấy. vậy tại sao? và cái nào là đúng ?</p>\n<p>Cái thứ nhất là đúng nhé, về mặt người dùng thì khi click rồi sau đó thay đổi nhưng đối tượng follow vẫn là người đầu tiên lúc click chứ nhỉ?  vì nếu như cái thứ 2 sẽ làm người dùng cảm thấy khó hiểu vì sao chọn <code class=\"language-text\">TekFun</code> click rồi , sau đó đổi lại <code class=\"language-text\">Facebook</code> lại show ra <code class=\"language-text\">Followed Facebook</code>. phải là <code class=\"language-text\">Followed TekFun</code> chứ. thế bug thôi. ăn ngay 1 con gián.</p>\n<hr>\n<p>Tại sao lại như vậy ?</p>\n<p>nhìn vào <code class=\"language-text\">showMessage</code> method của class:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">ProfilePage</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function-variable function\">showMessage</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n<span class=\"token operator\">></span>   <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Followed '</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Class method trên đọc từ <code class=\"language-text\">this.props.user</code> . Props là immutable trong ReactJS, vì thế nó sẽ không bao giờ thay đổi. Nhưng <code class=\"language-text\">this</code> sẽ luôn thay đổi vì nó là mutable.</p>\n<p>Đó là mục đích của <code class=\"language-text\">this</code> trong class. React luôn tự biến đổi nó, vì thế chúng ta có thể đọc được các version mới trong <code class=\"language-text\">render</code> và <code class=\"language-text\">lifecycle</code> methods.</p>\n<p>Vì thế nếu component re-render trong khi request đã trong trong tiến trình, <code class=\"language-text\">this.props</code> sẽ thay đổi. <code class=\"language-text\">ShowMessage</code> method sẽ đọc <code class=\"language-text\">user</code> từ <code class=\"language-text\">props</code> mới nhất.</p>\n<p>Điều đó cho thấy rằng, nếu chúng ta nói rằng UI là một thể hiện của state hiện tại. các <code class=\"language-text\">event handler</code> sẽ nên chỉ xử lý 1 props hoặc state cụ thể. Tuy nhiên việc sử dụng <code class=\"language-text\">this.props</code> đã phá vỡ điều đó.</p>\n<hr>\n<p>Vậy tại sao Function Component lại giải quyết được vấn đề đó ?</p>\n<p>Chúng ta sẽ thử điều chỉnh 1 chút về class Component đó như thế này :</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">ProfilePage</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function-variable function\">showMessage</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n<span class=\"token operator\">></span>  <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Followed '</span> <span class=\"token operator\">+</span> user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function-variable function\">handleClick</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n<span class=\"token operator\">></span>  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>user<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">;</span>\n    <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">showMessage</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleClick<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>Follow<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Với điều chỉnh trên chúng ta đã lấy props chính xác tại thời điểm đó. và ném nó vào <code class=\"language-text\">showMessage</code>.\nnó hoạt động tốt. Nhưng nó làm cho code trở nên dài dòng hơn, và dễ phát sinh bug về sau này khi phức tạp hơn.</p>\n<p>Tuy nhiên vấn đề này có thể giải quyết bằng cách dựa trên <code class=\"language-text\">javascript Closures</code>.</p>\n<p>Điều đó có nghĩa là nếu chúng ta đóng state hay props cụ thể nào tại một render cụ thể nào đó. thì chúng ta luôn có chính xác chúng là như nhau.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">ProfilePage</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// chúng ta bắt lấy props.</span>\n    <span class=\"token keyword\">const</span> props <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Note: chúng ta làm điều này trong render.</span>\n    <span class=\"token comment\">// không có class methods.</span>\n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">showMessage</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Followed '</span> <span class=\"token operator\">+</span> props<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">handleClick</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>showMessage<span class=\"token punctuation\">,</span> <span class=\"token number\">3000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>handleClick<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>Follow<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>với cách này chúng ta bắt chính xác props tại mỗi lần <code class=\"language-text\">render</code>.</p>\n<p>Cách trên có thể đúng, nhưng hơi phức tạp và điều gì sẽ xảy ra khi chúng ta khai báo các methods bên trong <code class=\"language-text\">render</code> thay vì là <code class=\"language-text\">class methods</code>.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">ProfilePage</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">showMessage</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Followed '</span> <span class=\"token operator\">+</span> props<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">handleClick</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>showMessage<span class=\"token punctuation\">,</span> <span class=\"token number\">3000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>handleClick<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>Follow<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Như cách trên thì <code class=\"language-text\">props</code> của chúng ta vẫn đang bị bắt, React ném chúng như một biến. không như <code class=\"language-text\">this</code> thì <code class=\"language-text\">props</code> là object không bao giờ bị thay đổi bởi React.</p>\n<p>Khi Component cha render <code class=\"language-text\">ProfilePage</code> với props khác thì call <code class=\"language-text\">ProfilePage</code> một lần nữa. nhưng event handler của chúng ta khi clicked đã thuộc về render trước và <code class=\"language-text\">showMessage</code> đã đọc nó. chúng sẽ không bị mất.</p>\n<hr>\n<blockquote>\n<p>Function components capture the rendered values.</p>\n</blockquote>\n<p>bấy giờ chúng ta đã hiểu sự khác nhau lớn giữa <code class=\"language-text\">Function Compoent</code> và <code class=\"language-text\">Class Component</code>.</p>\n<p>With <code class=\"language-text\">Hooks</code> ở version 16.8 React, cũng dựa trên nguyên tắc như vậy. nói như vậy không có nghĩa tôi khuyên bạn refactor toàn bộ project nhé. <code class=\"language-text\">Hooks</code> vẫn hoạt động tốt khi chúng ta keep <code class=\"language-text\">Class Component</code>.</p>\n<hr>\n<p>Đó là sự khác nhau mà mình đã tìm hiều, và tham khảo. Bài viết được dựa trên sự tìm hiểu, không phải sự khẳng định.\nCác bạn nên tham khảo và tìm hiều nhiều hơn nhé.</p>\n<p>Thank you for your reading!</p>","fields":{"slug":"/posts/how-are-function-component-different-from-classes/","tagSlugs":["/tag/javascript/","/tag/react-js/"]},"frontmatter":{"date":"2019-02-10T23:46:37.121Z","description":"Chắc hẳn ai đã từng nghiên cứu hoặc làm việc với ReactJS cũng đã từng đặt ra suy nghĩ, thắc mắc về Class và Function Component, khi nào thì sử dụng, và nó khác nhau như thế nào. Hay một số người lại cho rằng cái này tốt hơn cái kia...","tags":["Javascript","ReactJS"],"title":"How are function component different from classes"}}},"pageContext":{"slug":"/posts/how-are-function-component-different-from-classes/"}}